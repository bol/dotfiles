#!/opt/homebrew/bin/zsh

set -euo pipefail

DOTFILEDIR=$(cd $(dirname $0);pwd)

function link_conf() {
	source="$1"
	target="$2"

	if [ -e "$target" ];then
	  echo -e "\t\e[3mSkipping ${target}\e[0m"
	  return
  fi
	[ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tLinking ${target}"
  ln -s $source "$target"
}

function copy_conf() {
	source="$1"
	target="$2"

	if [ -e "$target" ];then
	  echo -e "\t\e[3mSkipping ${target}\e[0m"
	  return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tCopying ${target}"
  cp "$source" "$target"
}

function git_clone() {
  source="$1"
  target="$2"

	if [ -e "$target" ];then
	  echo -e "\t\e[3mSkipping ${target}\e[0m"
	  return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tCloning ${target}"
  git clone --quiet --depth 1 "$source" "$target"
}

function http_get() {
  source="$1"
  target="$2"

	if [ -e "$target" ];then
	  echo -e "\t\e[3mSkipping ${target}\e[0m"
	  return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tDownloading ${target}"
  curl -fqsSL -o "${target}" "${source}"
}

local -a modules_to_install

if (( $# == 0 )); then
  for dir in ${DOTFILEDIR}/*/install; do
    modules_to_install+=$(basename $(dirname "$dir"))
  done
else
  modules_to_install+=$@
fi


for module in ${modules_to_install}; do
    echo "Installing ${module} module"
    install_script="${DOTFILEDIR}/${module}/install"

        if [ -x "${install_script}" ]; then
            # shellcheck source=./*/install
            source "${install_script}" $(dirname "${install_script}")
        else
            echo "No such module: ${module}"
            exit 1
        fi
done
