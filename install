#!/usr/bin/env zsh

0=${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}
builtin emulate -L zsh -o extendedglob -o noshortloops \
                        -o warncreateglobal -o typesetsilent \
                        -o nopromptsubst

typeset -g DOTFILEDIR=$(cd $(dirname $0);pwd)

function link_conf() {
  local source="$1"
  local target="$2"

  if [ -e "$target" ]; then
    echo -e "\t\e[3mSkipping ${target}\e[0m"
    return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tLinking ${target}"
  ln -s $source "$target"
}

function copy_conf() {
  local source="$1"
  local target="$2"

  if [ -e "$target" ]; then
    echo -e "\t\e[3mSkipping ${target}\e[0m"
    return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tCopying ${target}"
  cp "$source" "$target"
}

function git_clone() {
  local source="$1"
  local target="$2"

  if [ -e "$target" ]; then
    echo -e "\t\e[3mSkipping ${target}\e[0m"
    return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tCloning ${target}"
  git clone --quiet --depth 1 "$source" "$target"
}

function http_get() {
  local source="$1"
  local target="$2"

  if [ -e "$target" ]; then
    echo -e "\t\e[3mSkipping ${target}\e[0m"
    return
  fi
  [ -d $(dirname "$target") ] || mkdir -p $(dirname "$target")

  echo -e "\tDownloading ${target}"
  curl -fqsSL -o "${target}" "${source}"
}

function install_module() {
    readonly module="${1}"
    readonly install_script="${DOTFILEDIR}/${module}/install.zsh"

    echo "Installing ${module} module"

    if [ ! -e "${install_script}" ]; then
              echo "No such module: ${module}"
              exit 1
    fi

    source "${install_script}" $(dirname "${install_script}")
}

install() {
  local -a modules_to_install
  local dir module

  if (($# == 0)); then
    for dir in ${DOTFILEDIR}/*/install.zsh; do
      modules_to_install+=($(basename $(dirname "$dir")))
    done
  else
    modules_to_install+=($@)
  fi
  for module in ${modules_to_install}; do
    install_module "${module}"
  done
}

install
