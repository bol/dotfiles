#compdef molecule

local -a _1st_arguments
_1st_arguments=(
    'check:Performs a check ("Dry Run") on the current role'
    'create:Creates all instances defined in molecule.yml'
    'dependency:Perform dependent actions on the current role'
    'destroy:Destroys all instances created by molecule.yml'
    'idempotence:Provisions instances and parses output to determine idempotence'
    'init:Creates the scaffolding for a new role intended for use with molecule'
    'list:Prints a list of currently available platforms'
    'login:Initiates an interactive ssh session with the given host'
    'status:Prints status of configured instances'
    'syntax:Performs a syntax check on the current role'
    'test:Runs a series of commands (defined in config) against instances for a full test/verify run'
    'verify:Performs verification steps on running instances'
)

__host_list ()
{
    _wanted application expl 'command' compadd $(molecule status --porcelain --hosts | \
      awk '/running/ {print $1}')
}

local expl

local curcontext="$curcontext" state line
local -A opt_args

_arguments -C \
    ':command:->command' \
    '*::options:->options'

case $state in
  (command)
      _describe -t commands "gem subcommand" _1st_arguments
      return
  ;;

  (options)
    case $line[1] in
      (login)
         _arguments '--host[host to access]:host:__host_list'
      ;;
    esac
  ;;
esac
